package ru.job4j.ood.srp.employeesystem;

import java.util.List;
import java.util.function.Predicate;

/**
 * В компании появилась необходимость в генерации отчетов.
 * Есть база данных со всеми сотрудниками компании.
 * <p>
 * 1. Сотрудники описываются моделью ru.job4j.srp.Employee.
 * 2. Доступ к базе данных осуществляется через интерфейс ru.job4j.design.Store.
 * 3. В компании есть три департамента: бухгалтерия, программисты, HR.
 * Всем департаментам нужны отчеты. Программисты реализовали систему отчетов
 * через Report interface- единую систему отчетов.
 * <p>
 * Задание:
 * Через месяц применения системы отчетности отдел программистов потребовал отчеты в виде html
 * (отчет нужно изобразить с помощью строк. Форматтеры использовать не нужно).
 * Отдел бухгалтерии попросил изменить вид зарплаты.
 * Отдел HR попросил выводить сотрудников в порядке убывания зарплаты и убрать поля даты найма и увольнения.
 * <p>
 * Этапы реализации:
 * 1. Создадим 3 класса, для каждого типа отчетов: AccountReport, ITReport, HRReport
 * 2. Имплементируем в каждом классе выше метод из интерфейса Report, generate()
 * С логикой, заданной пользователем данных отчетов.
 *
 * Добавил поддержку XML and JSON
 *
 * @author Alexey Sapsay (sapsayalexey@gmail.com)
 * @version 2.0
 * @since 17.10.2022
 */

public interface Store {

    void add(Employee em);

    List<Employee> findBy(Predicate<Employee> filter);
}